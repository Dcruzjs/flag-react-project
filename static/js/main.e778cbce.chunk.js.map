{"version":3,"sources":["country.js","wrapper.js","country-list.js","input.js","search.js","Region.js","action-list.js","header.js","country-selected.js","country-page.js","App.js","reducer.js","serviceWorker.js","index.js"],"names":["CountryStyled","styled","div","Country","flag","name","population","region","capital","cioc","nativeName","alpha2Code","history","useHistory","onClick","console","log","push","slugify","loading","src","alt","className","WrapperStyled","Wrapper","children","CountryListStyled","CountryList","dispatch","useDispatch","countryListByName","useSelector","state","countryList","filterByRegion","length","coutryFilteredByRegion","useEffect","fetch","then","response","json","list","type","payload","catch","map","key","InputStyled","label","Input","props","SearchStyled","Search","useState","inputValue","setInputValue","placeholder","value","onChange","e","target","RegionFilterStyled","Region","dropdown","setdropdown","onRegionChange","selectEvent","regionSelected","id","ActionListStyled","ActionList","HeaderStyled","Header","setDarkMode","darkMode","to","CountrySelectedStyled","CountrySelected","subregion","topLevelDomain","currencies","languages","borders","item","class","CountryPageStyled","CountryPage","match","DBcountry","find","params","country","setCountry","toLowerCase","data","goBack","store","createStore","action","filter","includes","App","setChecked","mainClass","changeMedia","mq","matches","window","matchMedia","addListener","removeListener","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"0jCAOA,IAAMA,EAAgBC,IAAOC,IAAV,KAoEJC,MA/Bf,YASI,IARFC,EAQC,EARDA,KACAC,EAOC,EAPDA,KACAC,EAMC,EANDA,WACAC,EAKC,EALDA,OACAC,EAIC,EAJDA,QAEAC,GAEC,EAHDC,WAGC,EAFDD,MACAE,EACC,EADDA,WAEMC,EAAUC,cAOhB,OACE,kBAACb,EAAD,CAAec,QAPjB,WACEC,QAAQC,IAAI,OAAQP,GAEpBG,EAAQK,KAAR,mBAAyBC,IAAQP,OAK/B,yBAAKQ,QAAQ,OAAOC,IAAKhB,EAAMiB,IAAI,KACnC,yBAAKC,UAAU,WACb,4BAAKjB,GAEL,2BAAG,+CAAH,IAAiCC,GACjC,2BAAG,2CAAH,IAA6BC,GAC7B,2BAAG,4CAAH,IAA8BC,M,yIClEtC,IAAMe,EAAgBtB,IAAOC,IAAV,KAcJsB,MARf,YAAgC,IAAbC,EAAY,EAAZA,SACjB,OACE,kBAACF,EAAD,KACGE,I,4SCNP,IAAMC,EAAoBzB,IAAOC,IAAV,KAwERyB,MA7Df,WACE,IAAMC,EAAWC,cAEXC,EAAoBC,aAAY,SAACC,GAAD,OAAWA,EAAMF,qBAEjDG,EAAcF,aAAY,SAACC,GAC/B,MAA6B,KAAzBA,EAAME,gBAAsD,IAA7BJ,EAAkBK,OAC5CH,EAAMI,uBAEXN,EAAkBK,OAAS,EACtBL,EAGFE,EAAMC,eAuBf,OApBAlB,QAAQC,IAAI,+BAAgCiB,GAE5CI,qBAAU,WACRC,MAAM,wCACHC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLd,EAAS,CACPe,KAAM,mBACNC,QAASF,IAGX3B,QAAQC,IAAI0B,EAAKP,WAElBU,OAAM,WACL9B,QAAQC,IAAI,mDAEf,CAACY,IAGF,kBAAC,EAAD,KACE,kBAACF,EAAD,KAEIO,EAAYa,KAAI,YAAgF,IAA7EzC,EAA4E,EAA5EA,KAAMD,EAAsE,EAAtEA,KAAME,EAAgE,EAAhEA,WAAYE,EAAoD,EAApDA,QAASD,EAA2C,EAA3CA,OAAQG,EAAmC,EAAnCA,WAAYD,EAAuB,EAAvBA,KAAME,EAAiB,EAAjBA,WAC5E,OACE,kBAAC,EAAD,CACEP,KAAMA,EACNC,KAAMA,EACN0C,IAAK1C,EACLC,WAAYA,EACZC,OAAQA,EACRC,QAASA,EACTE,WAAYA,EACZD,KAAMA,EACNE,WAAYA,U,ulBCjE5B,IAAMqC,EAAc/C,IAAOgD,MAAV,KAqCFC,MATf,YAA8B,IAAVC,EAAS,oBAC3B,OACE,kBAACH,EAAD,KACE,uBAAG1B,UAAU,kBACb,yCAAOqB,KAAK,QAAWQ,M,oRC9B7B,IAAMC,EAAenD,IAAOC,IAAV,KA0CHmD,MA7Bf,WAAmB,IAAD,EACoBC,mBAAS,IAD7B,mBACTC,EADS,KACGC,EADH,KAEV5B,EAAWC,cAgBjB,OACE,kBAACuB,EAAD,KAEIG,GACA,uBAAGjC,UAAU,qBAAqBR,QAXrB,WACjBc,EAAS,CACPe,KAAM,sBACNC,QAAS,KAEXY,EAAc,OAQZ,kBAAC,EAAD,CAAOC,YAAY,0BAA0BC,MAAOH,EAAYI,SApB/C,SAACC,GACpBJ,EAAcI,EAAEC,OAAOH,OACvB9B,EAAS,CACPe,KAAM,sBACNC,QAASgB,EAAEC,OAAOH,a,uiCCvBxB,IAAMI,EAAqB7D,IAAOC,IAAV,KA8DX6D,EAAS,WACpB,IAAMnC,EAAWC,cADS,EAEMyB,oBAAS,GAFf,mBAEnBU,EAFmB,KAETC,EAFS,KAKpBC,GAFiBnC,aAAY,SAACC,GAAD,OAAWA,EAAME,kBAE7B,SAACiC,GAEtBvC,EAbK,CACLe,KAAM,mBACNC,QAAS,CAAEwB,eAWmBD,OAGhC,OACE,oCACA,kBAACL,EAAD,KAEA,yBAAKxC,UAAS,UAAK0C,EAAS,gBAAgB,YAAclD,QAAS,kBAAKmD,GAAaD,IAAWK,GAAG,UAAnG,mBAEM,uBAAG/C,UAAU,wBACb,4BACE,wBAAIR,QAAS,kBAAIoD,EAAe,YAAhC,UACA,wBAAIpD,QAAS,kBAAIoD,EAAe,cAAhC,YACA,wBAAIpD,QAAS,kBAAIoD,EAAe,UAAhC,QACA,wBAAIpD,QAAS,kBAAIoD,EAAe,YAAhC,UACA,wBAAIpD,QAAS,kBAAIoD,EAAe,aAAhC,gB,uRCjFZ,IAAMI,EAAmBrE,IAAOC,IAAV,KA2BPqE,MAdf,WACE,OACE,kBAACD,EAAD,KACE,kBAAC,EAAD,KACE,yBAAKhD,UAAU,QACb,kBAAC,EAAD,MACA,+BACA,kBAAC,EAAD,U,+vBCrBV,IAAMkD,EAAevE,IAAOC,IAAV,KAuEHuE,MA/Bf,YAA4C,IAA1BC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,SAI7B,OACE,kBAACH,EAAD,KACE,kBAAC,EAAD,KACE,yBAAKlD,UAAU,WACb,kBAAC,IAAD,CAAMsD,GAAG,KACP,oDAIF,yBAAKtD,UAAU,aACb,uBAAGR,QAbb,WACE4D,GAAaC,KAaH,0BAAMrD,UAAU,QAEZqD,EACE,uBAAGrD,UAAU,gBACb,uBAAGA,UAAU,iBALrB,kB,+8BCxDZ,IAAMuD,EAAwB5E,IAAOC,IAAV,KAyFZ4E,MAxCf,YAaI,IAZF1E,EAYC,EAZDA,KACAC,EAWC,EAXDA,KACAK,EAUC,EAVDA,WACAJ,EASC,EATDA,WACAC,EAQC,EARDA,OACAwE,EAOC,EAPDA,UACAvE,EAMC,EANDA,QACAwE,EAKC,EALDA,eAKC,IAJDC,kBAIC,MAJY,GAIZ,MAHDC,iBAGC,MAHW,GAGX,MAFDC,eAEC,MAFS,GAET,EACD,OADC,EADDxE,WAGE,kBAACkE,EAAD,KACE,yBAAKzD,IAAKhB,EAAMiB,IAAI,KACpB,6BACE,4BAAKhB,GACL,yBAAKiB,UAAU,QACb,6BACE,2BAAG,gDAAH,IAAkCZ,GAClC,2BAAG,+CAAH,IAAiCJ,GACjC,2BAAG,2CAAH,IAA6BC,GAC7B,2BAAG,+CAAH,IAAiCwE,GACjC,2BAAG,4CAAH,IAA8BvE,IAEhC,6BACE,2BAAG,qDAAH,IAAuCwE,GACvC,2BAAG,+CAAH,IAAiCC,EAAWnC,KAAI,SAACsC,GAAD,OAAU,8BAAOA,EAAK/E,UACtE,uBAAGiB,UAAU,aAAY,8CAAzB,IAAsD4D,EAAUpC,KAAI,SAACsC,GAAD,OAAU,8BAAOA,EAAK/E,YAG9F,uBAAGiB,UAAU,WAAU,sDACtB6D,EAAQrC,KAAI,SAACsC,GAAD,OAAU,0BAAMC,MAAM,eAAeD,S,ibChF1D,IAAME,EAAoBrF,IAAOC,IAAV,KAgDRqF,MA3Bf,YAA0C,IAAnBC,EAAkB,EAAlBA,MAAO5E,EAAW,EAAXA,QACxB6E,EAAY1D,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAYyD,MAAK,SAAAN,GAAI,OAAIA,EAAKzE,aAAe6E,EAAMG,OAAOtB,SAD9D,EAETf,mBAASmC,GAFA,mBAEhCG,EAFgC,KAEvBC,EAFuB,KAiBvC,OAdAxD,qBAAU,WAEHuD,GACHtD,MAAM,0CAAD,OAA2CkD,EAAMG,OAAOtB,GAAGyB,gBAC7DvD,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACwD,GACLF,EAAWE,QAGhB,CAACH,EAASJ,EAAMG,OAAOtB,KAMxB,kBAACiB,EAAD,KACE,kBAAC,EAAD,KACE,4BAAQhE,UAAU,OAAOR,QAN/B,WACEF,EAAQoF,WAK2C,uBAAG1E,UAAU,+BAA5D,SACA,kBAAC,EAAoBsE,MCzBvBK,EAAQC,aCvBC,SAAiBlE,EAAOmE,GAErC,OADApF,QAAQC,IAAImF,GACJA,EAAOxD,MACb,IAAK,mBAEH,OADA5B,QAAQC,IAAI,uCACL,2BAAKgB,GAAZ,IAAmBC,YAAakE,EAAOvD,UAGzC,IAAK,sBACH,IAMMd,GALuB,KAAzBE,EAAME,eACDF,EAAMI,uBAENJ,EAAMC,aAEgBmE,QAAO,SAAAR,GAAO,OAAIA,EAAQvF,KAAKyF,cAAcO,SAASF,EAAOvD,QAAQkD,kBACpG,OAAO,2BAAK9D,GAAZ,IAAmBF,sBAIrB,IAAK,mBAAqB,IAChBsC,EAAmB+B,EAAOvD,QAA1BwB,eAER,GAAI,KAAOA,EACT,OAAO,2BAAKpC,GAAZ,IAAmBI,uBAAwB,GAAIF,eAAgB,KAGjE,IAAME,EAAyBJ,EAAMC,YAAYmE,QAAO,SAACR,GAAD,OAAaA,EAAQrF,SAAW6D,KAExF,OAAO,2BAAKpC,GAAZ,IAAmBI,yBAAwBF,eAAgBkC,IAG7D,QACE,OAAOpC,KDlBQ,CACnBC,YAAa,GACbH,kBAAmB,GACnBM,uBAAwB,GACxBF,eAAgB,KA2CHoE,MArCf,WAAgB,IAAD,EACmBhD,oBAAS,GAD5B,mBACNqB,EADM,KACID,EADJ,OAEiBpB,oBAAS,GAF1B,mBAEGiD,GAFH,WAGPC,EAAY7B,EAAW,eAAiB,gBAE9C,SAAS8B,EAAYC,GACnBhC,EAAYgC,EAAGC,SACfJ,EAAWG,EAAGC,SAYhB,OATAtE,qBAAU,WACR,IAAMqE,EAAKE,OAAOC,WAAW,gCAI7B,OAHAH,EAAGI,YAAYL,GACf/B,EAAYgC,EAAGC,SACfJ,EAAWG,EAAGC,SACP,WACLD,EAAGK,eAAeN,MAEnB,IAED,0BAAMnF,UAAWkF,GACf,kBAAC,IAAD,CAAUP,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAQvB,YAAaA,EAAaC,SAAUA,IAC5C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqC,KAAK,eAAeC,UAAW1B,IACtC,kBAAC,IAAD,CAAOyB,KAAK,KACV,kBAAC,EAAD,MACA,kBAAC,EAAD,YEzCME,QACW,cAA7BN,OAAOO,SAASC,UAEe,UAA7BR,OAAOO,SAASC,UAEhBR,OAAOO,SAASC,SAAS5B,MACvB,2DCZN6B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrF,MAAK,SAAAsF,GACJA,EAAaC,gBAEdjF,OAAM,SAAAkF,GACLhH,QAAQgH,MAAMA,EAAMC,c","file":"static/js/main.e778cbce.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport {\n  useHistory,\n} from 'react-router-dom'\nimport slugify from 'slugify'\n\nconst CountryStyled = styled.div`\n  cursor: pointer;\n  text-align: left;\n  border-radius: 5px;\n  /* overflow: hidden; */\n  box-shadow: 0 0 7px 2px rgba(0,0,0,.03);\n  &:hover .details {\n    border-radius: 0 0 5px 5px;\n    border: 1px solid var(--black);\n    border-top: none;\n  }\n  img {\n    width: 100%;\n    height: 160px;\n    object-fit: cover;\n    vertical-align: top;\n    border-radius: 5px 5px 0 0;\n  }\n  .details {\n    padding: 1.5em;\n    border: 1px solid transparent;\n    border-top: none;\n    transition: .3s border;\n    background: var(--white);\n  }\n  h2 {\n    margin: 0;\n    margin-bottom: 1rem;\n    font-size: 18px;\n    font-weight: 700;\n  }\n  p {\n    font-size: .9em;\n    margin-bottom: .5rem;\n  }\n`\n\nfunction Country({\n  flag,\n  name,\n  population,\n  region,\n  capital,\n  nativeName,\n  cioc,\n  alpha2Code,\n}) {\n  const history = useHistory()\n  function handleClick() {\n    console.log('cioc', cioc)\n    // const id = cioc || name\n    history.push(`/country/${slugify(alpha2Code)}`)\n  }\n\n  return (\n    <CountryStyled onClick={handleClick}>\n      <img loading=\"lazy\" src={flag} alt=\"\" />\n      <div className=\"details\">\n        <h2>{name}</h2>\n        {/* <p><strong>AF:</strong> {alpha2Code}</p> */}\n        <p><strong>Population:</strong> {population}</p>\n        <p><strong>Region:</strong> {region}</p>\n        <p><strong>Capital:</strong> {capital}</p>\n      </div>\n    </CountryStyled>\n  )\n}\n\nexport default Country\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst WrapperStyled = styled.div`\n  max-width: 1312px;\n  margin: auto;\n  padding: 0 1rem;\n`\n\nfunction Wrapper({ children }) {\n  return (\n    <WrapperStyled>\n      {children}\n    </WrapperStyled>\n  )\n}\n\nexport default Wrapper\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport Country from './country'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Wrapper from './wrapper'\n\nconst CountryListStyled = styled.div`\n  display: grid;\n  grid-row-gap: 2.3em;\n  grid-auto-flow: columns;\n  grid-column-gap: 66px;\n  grid-template-columns: repeat(auto-fill, 270px);\n  background: var(--background);\n  justify-content: center;\n  padding: 3em 0;\n`\n\nfunction CountryList() {\n  const dispatch = useDispatch()\n\n  const countryListByName = useSelector((state) => state.countryListByName)\n\n  const countryList = useSelector((state) => {\n    if (state.filterByRegion !== '' && countryListByName.length === 0) {\n      return state.coutryFilteredByRegion;\n    }\n    if (countryListByName.length > 0) {\n      return countryListByName\n    }\n\n    return state.countryList;\n  })\n\n  console.log('el estado total de mi app es', countryList)\n  // const [countryList, setCountryList] = useState([])\n  useEffect(() => {\n    fetch('https://restcountries.eu/rest/v2/all')\n      .then((response) => {\n        return response.json()\n      })\n      .then((list) => {\n        dispatch({\n          type: 'SET_COUNTRY_LIST',\n          payload: list\n        })\n        // setCountryList(data)\n        console.log(list.length)\n      })\n      .catch(() => {\n        console.log('hubo un error, que dolor que dolo que pena')\n      })\n  }, [dispatch])\n\n  return (\n    <Wrapper>\n      <CountryListStyled>\n        {\n          countryList.map(({ name, flag, population, capital, region, nativeName, cioc, alpha2Code }) => {\n            return (\n              <Country\n                flag={flag}\n                name={name}\n                key={name}\n                population={population}\n                region={region}\n                capital={capital}\n                nativeName={nativeName}\n                cioc={cioc}\n                alpha2Code={alpha2Code}\n              />\n            )\n          })\n        }\n      </CountryListStyled>\n    </Wrapper>\n  )\n}\n\nexport default CountryList\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst InputStyled = styled.label`\n  display: inline-flex;\n  background: var(--white);\n  align-items: center;\n  box-shadow: 0 2px 9px 0 rgba(0,0,0,.05);\n  padding: 0 2rem;\n  border-radius: 5px;\n  flex: 1;\n  i {\n    margin-right: 1em;\n    color: #C4C4C4;\n  }\n  input {\n    /* width: 100%; */\n    flex: 1;\n    border: none;\n    height: 48px;\n    line-height: 48px;\n    font-size: .7em;\n    outline: 0;\n    color: var(--black);\n    background: var(--white);\n    &::-webkit-input-placeholder {\n      color: #C4C4C4;\n    }\n  }\n`\n\nfunction Input({ ...props }) {\n  return (\n    <InputStyled>\n      <i className=\"fas fa-search\"></i>\n      <input type=\"text\" {...props} />\n    </InputStyled>\n  )\n}\n\nexport default Input\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport Input from './input'\nimport { useDispatch } from 'react-redux'\n\nconst SearchStyled = styled.div`\n  display: flex;\n  position: relative;\n  .close {\n    position: absolute;\n    right: 1em;\n    top: 1em;\n    border-radius: 50%;\n    border: none;\n    box-shadow: 0 2px 9px 0 rgba(0,0,0,.05);\n  }\n`\n\nfunction Search() {\n  const [inputValue, setInputValue] = useState('')\n  const dispatch = useDispatch()\n\n  const filterByName = (e) => {\n    setInputValue(e.target.value)\n    dispatch({\n      type: 'SET_COUNTRY_BY_NAME',\n      payload: e.target.value\n    })\n  }\n  const clearInput = () => {\n    dispatch({\n      type: 'SET_COUNTRY_BY_NAME',\n      payload: ''\n    })\n    setInputValue('')\n  }\n  return (\n    <SearchStyled>\n      {\n        inputValue &&\n        <i className=\"fas fa-times close\" onClick={clearInput}></i>\n      }\n      <Input placeholder=\"Search for a country...\" value={inputValue} onChange={filterByName} />\n    </SearchStyled>\n  )\n}\n\nexport default Search\n","import React, {useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components'\nconst RegionFilterStyled = styled.div`\n@import url('https://fonts.google.com/specimen/Nunito+Sans');\n* {\n    box-sizing: border-box;\n}\n.dropdown {\n  border-radius: 5px;\n  background-color: var(--white);\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.06), 0 1px 2px rgba(0, 0, 0, 0.12);\n  cursor: pointer;\n  text-align: center;\n  font-size: 12px;\n  padding: 20px;\n  position: relative;\n  background: var(--white);\n}\n.btn-toggle .fas {\n  display: none;\n}\n\nbody.dark .btn-toggle .fas {\n  display: inline-block;\n}\n\n\n.dropdown .fa-chevron-down {\n  margin-left: 10px;\n}\n\n.dropdown ul {\nborder-radius: 4px;\n  background-color: var(--background-el);\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.06), 0 1px 2px rgba(0, 0, 0, 0.12);\n  display: none;\n  padding: 10px;\n  text-align: center;\n  position: absolute;\n  top: 100%;\n  left: 0;\n  list-style-type: none;\n  background: var(--white);\n  width: 100%;\n  z-index: 99;\n}\n\n.dropdown.open ul {\n  display: block;\n}\n\n.dropdown ul li {\n  margin: 10px 0;\n}\n\n`\n\nconst filterByRegionAction = (regionSelected) => {\n  return {\n    type: 'FILTER_BY_REGION',\n    payload: { regionSelected },\n  };\n}\n\nexport const Region = () => {\n  const dispatch = useDispatch();\n  const [dropdown, setdropdown] = useState(false)\n  const filterByRegion = useSelector((state) => state.filterByRegion);\n\n  const onRegionChange = (selectEvent) => {\n\n    dispatch(filterByRegionAction(selectEvent));\n  }\n\n  return (\n    <>\n    <RegionFilterStyled>\n\n    <div className={`${dropdown?'dropdown open':'dropdown'}`} onClick={()=> setdropdown(!dropdown)} id=\"filter\">\n          Filter by Region\n          <i className=\"fas fa-chevron-down\"></i>\n          <ul>\n            <li onClick={()=>onRegionChange('Africa')}>Africa</li>\n            <li onClick={()=>onRegionChange('Americas')}>Americas</li>\n            <li onClick={()=>onRegionChange('Asia')}>Asia</li>\n            <li onClick={()=>onRegionChange('Europe')}>Europe</li>\n            <li onClick={()=>onRegionChange('Oceania')}>Oceania</li>\n          </ul>\n        </div>\n    </RegionFilterStyled>\n    </>\n  )\n}","import React from 'react'\nimport styled from 'styled-components'\nimport Search from './search'\nimport { Region as FilterByRegion } from './Region'\nimport Wrapper from './wrapper'\n\nconst ActionListStyled = styled.div`\n  .grid {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-row-gap: 20px;\n  }\n  @media screen and (min-width: 768px) {\n    .grid {\n      grid-template-columns: 480px 1fr 164px;\n    }\n  }\n`\n\nfunction ActionList() {\n  return (\n    <ActionListStyled>\n      <Wrapper>\n        <div className=\"grid\">\n          <Search />\n          <span></span>\n          <FilterByRegion />\n        </div>\n      </Wrapper>\n    </ActionListStyled>\n  )\n}\n\nexport default ActionList\n","import React from 'react'\nimport styled from 'styled-components'\nimport Wrapper from './wrapper'\nimport { Link } from 'react-router-dom'\n\nconst HeaderStyled = styled.div`\n  background: var(--white);\n  margin-bottom: 1em;\n  box-shadow: 0 2px 4px 0 rgba(0,0,0,.06);\n  .content {\n    height: 80px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  h1 {\n    font-size: 14px;\n  }\n  a {\n    text-decoration: none;\n    color: var(--dark);\n  }\n  .dark-mode {\n    cursor: pointer;\n    .moon {\n      transform: rotate(-25deg);\n      display: inline-flex;\n      margin-right: 10px;\n    }\n    p {\n      font-size: 12px;\n      font-weight: 600;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    margin-bottom: 3em;\n    h1 {\n      font-size: 24px;\n    }\n    p {\n      font-size: 1rem;\n    }\n  }\n`\n\nfunction Header({ setDarkMode, darkMode }) {\n  function handleClick() {\n    setDarkMode(!darkMode)\n  }\n  return (\n    <HeaderStyled>\n      <Wrapper>\n        <div className=\"content\">\n          <Link to=\"/\">\n            <h1>\n              Where in the world?\n            </h1>\n          </Link>\n          <div className=\"dark-mode\">\n            <p onClick={handleClick}>\n              <span className=\"moon\">\n                {\n                  darkMode ?\n                    <i className=\"fas fa-moon\"></i> :\n                    <i className=\"far fa-moon\"></i>\n                }\n              </span>\n              Dark Mode\n            </p>\n          </div>\n        </div>\n      </Wrapper>\n    </HeaderStyled>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst CountrySelectedStyled = styled.div`\n  margin-top: 3em;\n  padding-bottom: 3em;\n  img {\n    width: 100%;\n    margin-bottom: 2em;\n  }\n  .grid {\n    display: grid;\n    grid-row-gap: 1em;\n  }\n  .border-item {\n    padding: .5em 2em;\n    border-radius: 5px;\n    margin-right: 15px;\n    box-shadow: 0 0 5px rgba(0,0,0,.3);\n    display: inline-flex;\n    margin-bottom: 15px;\n    background: var(--white);\n  }\n  .languages {\n    span {\n      margin-right: 5px;\n      &:after {\n        content: ',';\n      }\n      &:last-child {\n        &:after {\n          display: none;\n        }\n      }\n    }\n  }\n  @media screen and (min-width: 1024px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 120px;\n    margin-top: 5em;\n    .grid {\n      grid-template-columns: 1fr 1fr;\n    }\n    .borders {\n      display: inline-flex;\n      margin-right: 1em;\n      margin-top: 3.5em;\n    }\n  }\n`\n\nfunction CountrySelected({\n  flag,\n  name,\n  nativeName,\n  population,\n  region,\n  subregion,\n  capital,\n  topLevelDomain,\n  currencies = [],\n  languages = [],\n  borders = [],\n  alpha2Code\n}) {\n  return (\n    <CountrySelectedStyled>\n      <img src={flag} alt=\"\" />\n      <div>\n        <h2>{name}</h2>\n        <div className=\"grid\">\n          <div>\n            <p><strong>Native Name:</strong> {nativeName}</p>\n            <p><strong>Population:</strong> {population}</p>\n            <p><strong>Region:</strong> {region}</p>\n            <p><strong>Sub Region:</strong> {subregion}</p>\n            <p><strong>Capital:</strong> {capital}</p>\n          </div>\n          <div>\n            <p><strong>Top Level Domain:</strong> {topLevelDomain}</p>\n            <p><strong>Currencies:</strong> {currencies.map((item) => <span>{item.name}</span>)}</p>\n            <p className=\"languages\"><strong>Languages:</strong> {languages.map((item) => <span>{item.name}</span>)}</p>\n          </div>\n        </div>\n        <p className=\"borders\"><strong>Border Countries:</strong></p>\n        {borders.map((item) => <span class=\"border-item\">{item}</span>)}\n      </div>\n    </CountrySelectedStyled>\n  )\n}\n\nexport default CountrySelected\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport Wrapper from './wrapper'\nimport { useSelector } from 'react-redux'\nimport CountrySelected from './country-selected'\n\nconst CountryPageStyled = styled.div`\n  .back {\n    background: var(--white);\n    box-shadow: 0 0 5px rgba(0,0,0,.3);\n    padding: .7em 2.2em;\n    border-radius: 5px;\n    border: none;\n    cursor: pointer;\n    margin-top: 1em;\n    color: var(--black);\n    i {\n      margin-right: 5px;\n    }\n  }\n  @media screen and (min-width: 1024px) {\n    .back {\n      margin-top: 3em;\n    }\n  }\n`\n\nfunction CountryPage({ match, history }) {\n  let DBcountry = useSelector(state => state.countryList.find(item => item.alpha2Code === match.params.id))\n  const [country, setCountry] = useState(DBcountry)\n  useEffect(() => {\n\n    if (!country) {\n      fetch(`https://restcountries.eu/rest/v2/alpha/${match.params.id.toLowerCase()}`)\n        .then((response) => response.json())\n        .then((data) => {\n          setCountry(data)\n        })\n    }\n  }, [country, match.params.id])\n\n  function handleClick() {\n    history.goBack()\n  }\n  return (\n    <CountryPageStyled>\n      <Wrapper>\n        <button className=\"back\" onClick={handleClick}><i className=\"fas fa-long-arrow-alt-left\"></i> Back</button>\n        <CountrySelected {...country} />\n      </Wrapper>\n    </CountryPageStyled>\n  )\n}\n\nexport default CountryPage\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport CountryList from './country-list'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport reducer from './reducer'\nimport ActionList from './action-list'\nimport Header from './header'\nimport CountryPage from './country-page'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom'\n\nconst initialState = {\n  countryList: [],\n  countryListByName: [],\n  coutryFilteredByRegion: [],\n  filterByRegion: '',\n\n}\n\nconst store = createStore(reducer, initialState)\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false)\n  const [checked, setChecked] = useState(false)\n  const mainClass = darkMode ? 'is-dark-mode' : 'is-light-mode'\n\n  function changeMedia(mq) {\n    setDarkMode(mq.matches)\n    setChecked(mq.matches)\n  }\n\n  useEffect(() => {\n    const mq = window.matchMedia('(prefers-color-scheme: dark)')\n    mq.addListener(changeMedia)\n    setDarkMode(mq.matches)\n    setChecked(mq.matches)\n    return () => {\n      mq.removeListener(changeMedia)\n    }\n  }, [])\n  return (\n    <main className={mainClass}>\n      <Provider store={store}>\n        <Router>\n          <Header setDarkMode={setDarkMode} darkMode={darkMode} />\n          <Switch>\n            <Route path=\"/country/:id\" component={CountryPage} />\n            <Route path=\"/\">\n              <ActionList />\n              <CountryList />\n            </Route>\n          </Switch>\n        </Router>\n      </Provider>\n    </main>\n  );\n}\n\nexport default App;\n","export default function reducer(state, action) {\n  console.log(action)\n  switch (action.type) {\n    case 'SET_COUNTRY_LIST': {\n      console.log('voy a actualizar la lista de paises')\n      return { ...state, countryList: action.payload }\n    }\n\n    case 'SET_COUNTRY_BY_NAME': {\n      let list\n      if (state.filterByRegion !== '') {\n        list = state.coutryFilteredByRegion\n      } else {\n        list = state.countryList\n      }\n      const countryListByName = list.filter(country => country.name.toLowerCase().includes(action.payload.toLowerCase()))\n      return { ...state, countryListByName }\n    }\n\n\n    case 'FILTER_BY_REGION': {\n      const { regionSelected } = action.payload;\n\n      if ('' === regionSelected) {\n        return { ...state, coutryFilteredByRegion: [], filterByRegion: '', };\n      }\n\n      const coutryFilteredByRegion = state.countryList.filter((country) => country.region === regionSelected);\n\n      return { ...state, coutryFilteredByRegion, filterByRegion: regionSelected }\n    }\n\n    default: {\n      return state\n    }\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}